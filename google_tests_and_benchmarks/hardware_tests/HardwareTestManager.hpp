#ifndef NANDCOMPUTER_HARDWARETESTMANAGER_HPP
#define NANDCOMPUTER_HARDWARETESTMANAGER_HPP

const double COEF = 30; //roughly equals the number of seconds per test


///Macro definitions for easy registration
#define HARDWARE_TRUTHTABLE_TEST_V(TYPE, TESTNAME, STANDARDNAME, TESTEDGATENAME) \
    TEST(TYPE##TestSuite, TESTNAME) { Standards::HardwareStandards::TYPE##Standards::STANDARDNAME(Hardware::TYPE::TESTEDGATENAME); }
#define BASICGATE_TRUTHTABLE_TEST_V(TESTNAME, STANDARDNAME, TESTEDGATENAME) HARDWARE_TRUTHTABLE_TEST_V(BasicGates, TESTNAME, STANDARDNAME, TESTEDGATENAME)
#define     ADDER_TRUTHTABLE_TEST_V(TESTNAME, STANDARDNAME, TESTEDGATENAME) HARDWARE_TRUTHTABLE_TEST_V(Adders,     TESTNAME, STANDARDNAME, TESTEDGATENAME)
#define BASICGATE_TRUTHTABLE_TEST(TESTNAME, TESTEDGATENAME) BASICGATE_TRUTHTABLE_TEST_V(TESTNAME, TESTEDGATENAME, TESTEDGATENAME)
#define     ADDER_TRUTHTABLE_TEST(TESTNAME, TESTEDGATENAME)     ADDER_TRUTHTABLE_TEST_V(TESTNAME, TESTEDGATENAME, TESTEDGATENAME)

#define HARDWARE_PARTIAL_TEST_V(TYPE, TESTNAME, STANDARDNAME, TESTEDGATENAME, TIMES, ...) \
    TEST(TYPE##TestSuite, TESTNAME) \
    { \
        for (int i = TIMES; i--; ) \
            Standards::HardwareStandards::TYPE##Standards::STANDARDNAME(Hardware::TYPE::TESTEDGATENAME, __VA_ARGS__); \
    }
#define BASICGATE_PARTIAL_TEST_V(TESTNAME, STANDARDNAME, TESTEDGATENAME, TIMES, ...) HARDWARE_PARTIAL_TEST_V(BasicGates, TESTNAME, STANDARDNAME, TESTEDGATENAME, TIMES, __VA_ARGS__)
#define     ADDER_PARTIAL_TEST_V(TESTNAME, STANDARDNAME, TESTEDGATENAME, TIMES, ...) HARDWARE_PARTIAL_TEST_V(Adders,     TESTNAME, STANDARDNAME, TESTEDGATENAME, TIMES, __VA_ARGS__)
#define BASICGATE_PARTIAL_TEST(TESTNAME, TESTEDGATENAME, TIMES, ...) BASICGATE_PARTIAL_TEST_V(TESTNAME, TESTEDGATENAME, TESTEDGATENAME, TIMES, __VA_ARGS__)
#define     ADDER_PARTIAL_TEST(TESTNAME, TESTEDGATENAME, TIMES, ...)     ADDER_PARTIAL_TEST_V(TESTNAME, TESTEDGATENAME, TESTEDGATENAME, TIMES, __VA_ARGS__)

#endif //NANDCOMPUTER_HARDWARETESTMANAGER_HPP
